# https://www.apollographql.com/docs/apollo-server/v3/data/file-uploads
# type FileInput {
#   file: Upload!
# }
scalar Upload

# 登录 通过code 或者密码
mutation Login($input: String!) {
  login(payload: $input)
}

# 注册 通过验证码
mutation Signup($input: String!) {
  signup(payload: $input)
}

# 获取验证码
mutation Code($input: String!) {
  code(payload: $input)
}

# 上传附件 使用 /api/v1/files
mutation UploadFile($input: Upload!) {
  uploadFile(file: $input) {
    file_url
  }
}

# 重设密码
mutation ResetPassword($input: String!) {
  resetPassword(payload: $input)
}

type AccountInput {
  name: String!
  app: String!
  appid: String!
  app_secret: String!
  callback_url: String!
  platform_type: Int!
}

mutation CreateAccount($input: AccountInput!) {
  createAccount(input: $input)
}

mutation UpdateAccount($id: Int!, $input: AccountInput!) {
  updateAccount(
    id: $id
    input: $input
  )
}

type FileGroupInput {
  group_name: String!
  description: String!
  parent_id: Int!
  sort_id: Int!
}

mutation CreateFileGroup($input: FileGroupInput!) {
  createFileGroup(input: $input)
}

mutation UpdateFileGroup($id: Int!, $input: FileGroupInput!) {
  updateFileGroup(
    id: $id
    input: $input
  )
}

mutation DeleteFileGroup($id: Int!) {
  deleteFileGroup(id: $id)
}

type RoleInput {
  name: String!
  display_name: String!
  description: String!
  is_visible: Boolean!
  sort_id: Int!
}

mutation CreateRole($input: RoleInput!) {
  createRole(input: $input)
}

mutation UpdateRole($id: Int!, $input: RoleInput!) {
  updateRole(
    id: $id
    input: $input
  )
}

mutation DeleteRole($id: Int!) {
  deleteRole(id: $id)
}

mutation DeleteAccount($id: Int!) {
  deleteAccount(id: $id)
}

type PermissionTypeInput {
  name: String!
  display_name: String!
  sort_id: Int!
}

mutation CreatePermissionType($input: PermissionTypeInput!) {
  createPermissionType(input: $input)
}

mutation UpdatePermissionType($id: Int!, $input: PermissionTypeInput!) {
  updatePermissionType(
    id: $id
    input: $input
  )
}

mutation DeletePermissionType($id: Int!) {
  deletePermissionType(id: $id)
}

type PermissionInput {
  name: String!
  display_name: String!
  description: String!
  is_visible: Boolean!
  sort_id: Int!
  type_id: Int!
}

mutation CreatePermission($input: PermissionInput!) {
  createPermission(
    input: $input
  )
}

mutation UpdatePermission($id: Int!, $input: PermissionInput!) {
  updatePermission(
    id: $id
    input: $input
  )
}

mutation DeletePermission($id: Int!) {
  deletePermission(id: $id)
}

type SettingInput {
  title: String!
  keywords: String!
  description: String!
  host: String!
  file_group_id: Int!
  email_driver: String!
  email_host: String!
  email_port: Int!
  email_username: String!
  email_password: String!
  email_encryption: String!
  email_from_address: String!
  email_from_name: String!
  registrable: Boolean!
}

mutation UpdateSetting($input: SettingInput!) {
  updateSetting(
    input: $input
  )
}

type CoreInput {
  name: String!
  display_name: String!
  description: String!
  thumb: String!
  is_visible: Boolean!
  sort_id: Int!
}

mutation CreateCore($input: CoreInput!) {
  createCore(
    input: $input
  )
}

mutation UpdateCore($id: Int!, $input: CoreInput!) {
  updateCore(
    id: $id
    input: $input
  )
}

mutation DeleteCore($id: Int!) {
  deleteCore(id: $id)
}
